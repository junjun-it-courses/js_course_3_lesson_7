/*
 Hoisting - поднятие,  hoisting учит, что объявление переменной или функции
 физически перемещается в начало вашего кода, хотя в действительности этого не
 происходит.

 На самом же деле, объявления переменных и функций попадают в память в процессе фазы
 компиляции, но остаются в коде на том месте, где вы их объявили.
*/


// Пример 1

function catName(name) {
    console.log("Мою кошку зовут " + name);
}

catName("Тигр");



// Пример 2

anotherCatName("Раиса");

function anotherCatName(name) {
    console.log("Мою кошку зовут " + name);
}



/*
    Hoisting хорошо работает и с другими типами данных и переменными.
    Переменные могут быть инициализированы и использованы до их объявления.
    Однако, они не могут быть использованы без инициализации.
*/

num = 6;
num + 7;
var num;

console.log(num)
/* не генерирует ошибку, так как num объявлен */



/*
    JavaScript "поднимает" только объявление, но не инициализацию. Если вы
    используете переменную, объявленную и проинициализированную после её
    использования, то значение будет undefined. Два примера ниже демонстрируют
    это поведение.
*/


var x = 1;                  // Инициализируем x
console.log(x + " " + y);   // '1 undefined'
var y = 2;


// var x = 1;                  // Инициализируем x
// var y;                      // Объявляем y
// console.log(x + " " + y);   // '1 undefined'
// y = 2;                      // Инициализируем y


/*
    Все объявления переменных и констант (var, let, const) "поднимаются" в
    JavaScript. Но важно понимать что переменные и константы которые объявлены
    через let и const находятся во Temporal Dead Zone (TDZ) из-за чего мы просто
    не можем получить к ним доступ до объявления.
*/


console.log(foo);
let foo = 'Example Value';


console.log(bar);
const bar = 'Another example value';